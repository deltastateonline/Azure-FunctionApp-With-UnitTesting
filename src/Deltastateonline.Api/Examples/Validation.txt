using System.IO;
using System.Threading.Tasks;
using Microsoft.AspNetCore.Mvc;
using Microsoft.Azure.WebJobs;
using Microsoft.Azure.WebJobs.Extensions.Http;
using Microsoft.AspNetCore.Http;
using Microsoft.Extensions.Logging;
using Newtonsoft.Json;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;

public static class PurchaseOrderFunction
{
    [FunctionName("ValidatePurchaseOrder")]
    public static async Task<IActionResult> Run(
        [HttpTrigger(AuthorizationLevel.Function, "post", Route = null)] HttpRequest req,
        ILogger log)
    {
        log.LogInformation("Processing a request to validate a purchase order.");

        string requestBody = await new StreamReader(req.Body).ReadToEndAsync();
        PurchaseOrder purchaseOrder = JsonConvert.DeserializeObject<PurchaseOrder>(requestBody);

        var validationResults = new List<ValidationResult>();
        var validationContext = new ValidationContext(purchaseOrder, null, null);
        bool isValid = Validator.TryValidateObject(purchaseOrder, validationContext, validationResults, true);

        if (!isValid)
        {
            return new BadRequestObjectResult(validationResults);
        }

        return new OkObjectResult("Purchase order is valid.");
    }
}
